FROM node:16-alpine AS builder

WORKDIR /app

COPY package.json .

COPY .npmrc .

RUN npm cache clean --force && npm install --loglevel verbose

COPY . .

ARG GENERATE_SOURCEMAP

ENV GENERATE_SOURCEMAP $GENERATE_SOURCEMAP

ARG REACT_APP_JWT

ENV REACT_APP_JWT $REACT_APP_JWT

ARG REACT_APP_METAKEEP_API_KEY

ENV REACT_APP_METAKEEP_API_KEY $REACT_APP_METAKEEP_API_KEY

ARG REACT_APP_METAKEEP_APPID

ENV REACT_APP_METAKEEP_APPID $REACT_APP_METAKEEP_APPID

ARG REACT_APP_PRIVY_APP_ID

ENV REACT_APP_PRIVY_APP_ID $REACT_APP_PRIVY_APP_ID

ARG REACT_APP_S3_ASSETS

ENV REACT_APP_S3_ASSETS $REACT_APP_S3_ASSETS

ARG REACT_APP_SKYNET_SERVICE_URL

ENV REACT_APP_SKYNET_SERVICE_URL $REACT_APP_SKYNET_SERVICE_URL

ARG REACT_APP_TRIA_PROJECT_ID

ENV REACT_APP_TRIA_PROJECT_ID $REACT_APP_TRIA_PROJECT_ID

ARG NODE_ENV

ENV NODE_ENV $NODE_ENV

ARG REACT_APP_NAME

ENV REACT_APP_NAME $REACT_APP_NAME

ARG REACT_APP_API_URL

ENV REACT_APP_API_URL $REACT_APP_API_URL

RUN npm run build

FROM nginx:1.21.0-alpine as production

ENV NODE_ENV production

COPY --from=builder /app/build /usr/share/nginx/html

COPY nginx.conf /etc/nginx/conf.d/default.conf

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]
